{"version":3,"sources":["modules/auth/screens/AuthRecover.js","enviroment/enviroment.js","services/auth.js","context/auth/authContext.js","modules/auth/screens/AuthRegister.js","modules/auth/screens/AuthLogin.js","routers/RouterAuth.js","modules/admin/screens/AdminDashboard.js","modules/admin/screens/AdminCategorias.js","services/services.js","modules/admin/components/MesasFormulario.js","modules/admin/components/Cargando.js","modules/admin/components/MesasTabla.js","modules/admin/screens/AdminMesas.js","services/pedidos.js","modules/admin/components/PedidosTabla.js","modules/admin/screens/AdminPedidos.js","modules/admin/screens/AdminPlatos.js","modules/admin/components/AdminHeader.js","modules/admin/screens/AdminPedidosDetalle.js","routers/RouterAdmin.js","modules/guest/screens/GuestLanding.js","modules/guest/screens/GuestNosotros.js","routers/RouterGuest.js","context/pos/posContext.js","modules/pos/components/PosMesaItem.js","modules/pos/components/PosCargando.js","services/mesas.js","modules/pos/components/PosMesas.js","hooks/useFetch.js","modules/pos/components/PosCategorias.js","modules/pos/components/PosPlatoItem.js","services/categoria.js","modules/pos/components/PosPlatos.js","modules/pos/components/PosComandaListaItem.js","modules/pos/components/PosComandaLista.js","modules/pos/screens/Pos.js","modules/pos/components/PosHeader.js","modules/pos/components/PosNavigation.js","context/pos/posReducer.js","context/pos/posState.js","routers/RouterPos.js","routers/RutaPrivada.js","routers/RouterMain.js","context/auth/authReducer.js","context/auth/authState.js","App.js","index.js"],"names":["AuthRecover","URL_BACKEND","URL_BACKEND_HEROKU","postRegister","objUsuario","a","fetch","method","headers","body","JSON","stringify","response","json","postVerificar","token","ok","postLogin","correo","password","AuthContext","createContext","AuthRegister","history","iniciarSesion","useContext","useState","usu_nom","usu_ape","usu_email","pass1","pass2","error","formulario","setFormulario","handleChange","e","target","name","value","className","onSubmit","preventDefault","trim","usu_tipo","then","rpta","console","log","replace","htmlFor","type","placeholder","onChange","AuthLogin","email","for","RouterAuth","path","component","to","AdminDashboard","pedidos","mesas","categorias","reporte","setReporte","useEffect","socket","io","on","emit","dataString","dataJSON","parse","AdminCategorias","getMesas","deleteMesasById","mesa_id","postMesa","objMesa","putMesaById","MesasFormulario","obtenerMesas","modo","mesa","setModo","setMesa","mesa_nro","mesa_cap","form","setForm","Swal","fire","title","icon","text","position","timer","showConfirmButton","Cargando","tipo","texto","clase","role","MesasTabla","loading","datatable","columns","label","field","rows","map","mesa_acciones","onClick","showCancelButton","confirmButtonText","confirmButtonColor","editarMesaById","infoLabel","hover","data","filter","proSelect","searchTop","searchBottom","AdminMesas","setMesas","setLoading","getPedidos","getPedidosById","pedido_id","posPedido","objPedido","PedidosTabla","setPedidos","pedido_est","Mesa","acciones","push","responsive","striped","bordered","AdminPedidos","props","AdminPlatos","AdminHeader","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","exact","activeClassName","AdminPedidosDetalle","useParams","pedido","setPedido","pedido_nro","pedido_fech","Usuario","PedidoPlatos","i","key","pedidoplato_id","pedidoplato_cant","Plato","plato_nom","src","plato_img","style","height","alt","plato_pre","toFixed","goBack","RouterAdmin","GuestLanding","GuestNosotros","RouterGuest","PosContext","PosMesaItem","localPosContext","globalObjMesa","seleccionarMesa","PosCargando","PosMesas","mesasString","mesasJSON","content","useFetch","url","result","estado","setEstado","hacerFetch","PosCategorias","seleccionarCategoria","globalObjCategoria","objCategoria","activo","categoria_id","categoria_nom","PosPlatoItem","objPlato","incrementarPlato","plato_id","getPlatosByCategoriaId","categoria_Id","PosPlatos","platos","setPlatos","Platos","PosComandaListaItem","pedidoItem","PosComandaLista","globalPedidos","pedidoActual","find","pedidoplatos","Pos","globalPagar","withRouter","localAuthContext","cerrarSesion","PosNavigation","PosReducer","stateActual","action","PosState","useReducer","state","dispatch","Provider","objPedidoPlato","globalPedidosNuevo","forEach","usu_id","children","RouterPos","RutaPrivada","Componente","componente","autenticado","cargando","RouterMain","basename","AuthReducer","localStorage","removeItem","AuthState","iniciarSesionConLocalStorage","getItem","payloadEnc","split","payloadDes","window","atob","payloadJSON","setItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAUeA,EARK,WAChB,OACI,yE,6CCJKC,EAAc,8CACdC,EAAqB,wCCCrBC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACDC,MAAM,GAAD,OAAIJ,EAAJ,aAAmC,CAC3DK,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KAND,cAClBQ,EADkB,gBAQLA,EAASC,OARJ,cAQlBA,EARkB,yBASjBA,GATiB,2CAAH,sDAYZC,EAAa,uCAAG,WAAOC,GAAP,iBAAAV,EAAA,sEACFC,MAAM,GAAD,OAAIJ,EAAJ,cAAoC,CAC5DK,OAAQ,OACRC,QAAS,CACL,cAAgB,UAAhB,OAA2BO,MAJV,cACnBH,EADmB,gBAONA,EAASC,OAPH,cAOnBA,EAPmB,yBAQlBA,EAAKG,IARa,2CAAH,sDAWbC,EAAS,uCAAG,WAAOC,EAAQC,GAAf,iBAAAd,EAAA,sEACEC,MAAM,GAAD,OAAIJ,EAAJ,UAAgC,CACxDK,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBO,SACAC,eARa,cACfP,EADe,gBAWFA,EAASC,OAXP,cAWfA,EAXe,yBAYdA,GAZc,2CAAH,wDCrBPO,EAFKC,0BCsHLC,EAlHM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAGZC,EADiBC,qBAAWL,GAC5BI,cAH0B,EAMEE,mBAAS,CACzCC,QAAS,GACTC,QAAS,GACTC,UAAW,GACXC,MAAO,GACPC,MAAO,GACPC,OAAO,IAZuB,mBAM3BC,EAN2B,KAMfC,EANe,KAe5BC,EAAe,SAACC,GAClBF,EAAc,2BACPD,GADM,kBAERG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAI1BX,EAA8CK,EAA9CL,QAASC,EAAqCI,EAArCJ,UAAWF,EAA0BM,EAA1BN,QAASG,EAAiBG,EAAjBH,MAAOC,EAAUE,EAAVF,MA+B5C,OACI,0BAAMS,UAAU,SACZ,yBAAKA,UAAU,eACX,4CACA,0BAAMA,UAAU,aAAaC,SAjCpB,SAACL,GAElB,GADAA,EAAEM,iBAEqB,KAAnBd,EAAQe,QACW,KAAnBhB,EAAQgB,QACa,KAArBd,EAAUc,QACO,KAAjBb,EAAMa,QACNb,IAAUC,EACZ,CACE,IAAM3B,EAAU,2BACT6B,GADS,IAEZd,SAAUW,EACVc,SAAU,UAGdzC,EAAaC,GAAYyC,MAAK,SAACC,GAC3BC,QAAQC,IAAIF,GACRA,EAAK9B,KACLQ,EAAcsB,EAAK/B,OAGnBQ,EAAQ0B,QAAQ,eAahB,2BAAOC,QAAQ,IAAf,WACA,2BACIC,KAAK,OACLX,UAAU,oBACVY,YAAY,SACZd,KAAK,UACLC,MAAON,EAAWN,QAClB0B,SAAUlB,IAGd,2BAAOe,QAAQ,IAAf,aACA,2BACIC,KAAK,OACLX,UAAU,oBACVY,YAAY,WACZd,KAAK,UACLC,MAAON,EAAWL,QAClByB,SAAUlB,IAGd,2BAAOe,QAAQ,IAAf,UACA,2BACIC,KAAK,QACLX,UAAU,oBACVY,YAAY,QACZd,KAAK,YACLC,MAAON,EAAWJ,UAClBwB,SAAUlB,IAEd,2BAAOe,QAAQ,IAAf,aACA,2BACIC,KAAK,WACLX,UAAU,oBACVY,YAAY,WACZd,KAAK,QACLC,MAAON,EAAWH,MAClBuB,SAAUlB,IAEd,2BAAOe,QAAQ,IAAf,oBACA,2BACIC,KAAK,WACLX,UAAU,oBACVY,YAAY,WACZd,KAAK,QACLC,MAAON,EAAWF,MAClBsB,SAAUlB,IAEd,4BAAQK,UAAU,qBAAqBW,KAAK,UAA5C,mBC3CLG,EA/DG,SAAC,GAAiB,IAAf/B,EAAc,EAAdA,QAGXC,EADiBC,qBAAWL,GAC5BI,cAHyB,EAKGE,mBAAS,CAC3C6B,MAAO,GACPpC,SAAU,KAPqB,mBAK1Bc,EAL0B,KAKdC,EALc,KAU3BC,EAAe,SAACC,GACpBF,EAAc,2BACTD,GADQ,kBAEVG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAkB9B,OACE,0BAAMC,UAAU,SACd,yBAAKA,UAAU,eACb,mDACA,0BAAMA,UAAU,aAAaC,SAlBlB,SAACL,GAChBA,EAAEM,iBAGFzB,EAAUgB,EAAWsB,MAAOtB,EAAWd,UAAU0B,MAAK,SAACC,GACjDA,EAAK9B,KACPQ,EAAcsB,EAAK/B,OACnBQ,EAAQ0B,QAAQ,cAYd,2BAAOO,IAAI,IAAX,UACA,2BACEL,KAAK,QACLX,UAAU,oBACVY,YAAY,QACZd,KAAK,QACLC,MAAON,EAAWsB,MAClBF,SAAUlB,IAEZ,2BAAOqB,IAAI,IAAX,aACA,2BACEL,KAAK,WACLX,UAAU,oBACVY,YAAY,WACZd,KAAK,WACLC,MAAON,EAAWd,SAClBkC,SAAUlB,IAEZ,4BAAQK,UAAU,qBAAqBW,KAAK,UAA5C,yBCtCKM,G,MAdI,WACf,OACI,oCAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAM,cAAeC,UAAWL,IACvC,kBAAC,IAAD,CAAOI,KAAM,iBAAkBC,UAAWrC,IAC1C,kBAAC,IAAD,CAAOoC,KAAM,gBAAiBC,UAAW3D,IACzC,kBAAC,IAAD,CAAU4D,GAAI,oB,iBC+DfC,EAvEQ,WAAM,MAEGnC,mBAAS,CACrCoC,QAAS,cACTC,MAAO,cACPC,WAAY,gBALa,mBAEpBC,EAFoB,KAEXC,EAFW,KA4B3B,OApBAC,qBAAU,WACR,IAAMC,EAASC,IAAGnE,GAElBkE,EAAOE,GAAG,WAAW,WACjBF,EAAOG,KAAK,iCAGhBH,EAAOE,GAAG,qBAAqB,SAACE,GAC9B,IAAMC,EAAW/D,KAAKgE,MAAMF,GAC5BN,EAAWO,QASZ,IAGD,oCACE,yBAAKjC,UAAU,YACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,yBAAd,eAGJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,0BAAd,YAEF,yBAAKA,UAAU,aACb,wBAAIA,UAAU,yBAAyByB,EAAQH,YAIrD,yBAAKtB,UAAU,YACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,0BAAd,UAEF,yBAAKA,UAAU,aACb,wBAAIA,UAAU,yBAAyByB,EAAQF,UAIrD,yBAAKvB,UAAU,YACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,0BAAd,eAEF,yBAAKA,UAAU,aACb,wBAAIA,UAAU,yBAAyByB,EAAQD,kBC3D9CW,EARS,WACpB,OACI,sDCFKC,EAAQ,uCAAG,8BAAAvE,EAAA,sEACGC,MAAM,GAAD,OAAIL,EAAJ,WADR,cACdW,EADc,gBAEDA,EAASC,OAFR,cAEdA,EAFc,yBAGZA,GAHY,2CAAH,qDAMRgE,EAAe,uCAAG,WAAOC,GAAP,iBAAAzE,EAAA,sEACJC,MAAM,GAAD,OAAIL,EAAJ,kBAAyB6E,GAAU,CAC3DvE,OAAO,WAFgB,cACrBK,EADqB,gBAIRA,EAASC,OAJD,cAIrBA,EAJqB,yBAKpBA,GALoB,2CAAH,sDAQfkE,EAAQ,uCAAG,WAAOC,GAAP,iBAAA3E,EAAA,sEACGC,MAAM,GAAD,OAAIL,EAAJ,UAAwB,CAChDM,OAAO,OACPC,QAAS,CACL,eAAe,oBAGnBC,KAAKC,KAAKC,UAAUqE,KAPJ,cACdpE,EADc,gBASDA,EAASC,OATR,cASdA,EATc,yBAUbA,GAVa,2CAAH,sDAaRoE,EAAW,uCAAG,WAAOD,GAAP,iBAAA3E,EAAA,sEACAC,MAAM,GAAD,OAAIL,EAAJ,kBAAyB+E,EAAQF,SAAU,CACnEvE,OAAO,MACPC,QAAS,CACL,eAAe,oBAEnBC,KAAKC,KAAKC,UAAUqE,KAND,cACjBpE,EADiB,gBAQJA,EAASC,OARL,cAQjBA,EARiB,yBAShBA,GATgB,2CAAH,sD,iBCuFTqE,EAhHS,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAAc,EAEhD7D,mBAAS,CAC7B8D,SAAU,GACVC,SAAU,IAJ0D,mBAEjEC,EAFiE,KAE3DC,EAF2D,KAOxExB,qBAAU,WACO,WAATiB,GACAO,EAAQN,KAIb,CAACA,EAAKD,IAET,IAAMjD,EAAe,SAACC,GAClBuD,EAAQ,2BACDD,GADA,kBAEFtD,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAoDlC,OACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,0BAAMC,SApDL,SAACL,GAClBA,EAAEM,iBACEgD,EAAKD,SAAW,GAA8B,KAAzBC,EAAKF,SAAS7C,SACtB,UAATyC,EACAL,EAASW,GAAM7C,MAAK,SAACC,GAEbA,EAAKgC,UACLa,EAAQ,CACJH,SAAU,GACVC,SAAU,IAGdN,IACAS,IAAKC,KAAK,CACNC,MAAO,aACPC,KAAM,UACNC,KAAM,+BACNC,SAAU,UACVC,MAAO,KACPC,mBAAmB,QAM/BlB,EAAYS,GAAM7C,MAAK,SAACC,GAGhBA,EAAKgC,UACLa,EAAQ,CAAEH,SAAU,GAAIC,SAAU,IAClCN,IACAG,EAAQ,SACRC,EAAQ,IACRK,IAAKC,KAAK,CACNE,KAAM,UACND,MAAO,qCACPI,MAAO,KACPD,SAAU,UACVE,mBAAmB,WAenB,yBAAK3D,UAAU,cACX,2BAAOU,QAAQ,IAAf,cACA,2BACIX,MAAOmD,EAAKF,SACZlD,KAAK,WACLe,SAAUlB,EACVgB,KAAK,OACLX,UAAU,eACVY,YAAY,uBAGpB,yBAAKZ,UAAU,cACX,2BAAOU,QAAQ,IAAf,cACA,2BACIC,KAAK,SACLX,UAAU,eACVY,YAAY,eACZb,MAAOmD,EAAKD,SACZnD,KAAK,WACLe,SAAUlB,KAGlB,yBAAKK,UAAU,0BACX,4BAAQA,UAAU,kBAAkBW,KAAK,UAC3B,UAATiC,EAAmB,6CAAa,+CAErC,4BAAQ5C,UAAU,yBAAyBW,KAAK,UAAhD,mB,QC1FjBiD,EAdE,SAAC,GAA8B,IAAD,IAA3BC,YAA2B,MAApB,OAAoB,EAAZC,EAAY,EAAZA,MAEzBC,EAAK,sBAAkBF,GAE7B,OAEI,yBAAK7D,UAAW+D,EAAOC,KAAK,SACxB,wBAAIhE,UAAU,iBAAd,eACA,2BAAG,uBAAGA,UAAU,kCAChB,2BAAI8D,KC6FDG,EAlGI,SAAC,GAAwD,IAAtD1C,EAAqD,EAArDA,MAAO2C,EAA8C,EAA9CA,QAASvB,EAAqC,EAArCA,aAAcI,EAAuB,EAAvBA,QAASD,EAAc,EAAdA,QA0CnDqB,EAAY,CACdC,QAAS,CACL,CAAEC,MAAO,KAAMC,MAAO,WACtB,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,YAAaC,MAAO,YAC7B,CAAED,MAAO,WAAYC,MAAO,kBAEhCC,KAAMhD,EAAMiD,KAAI,SAAChC,GACb,OAAO,2BACAA,GADP,IAEIS,SAAUT,EAAQS,SAAW,YAC7BwB,cACI,oCACI,4BACIzE,UAAU,iBACV0E,QAAS,WAvDR,IAACpC,IAwDmBE,EAAQF,QAvDjD/B,QAAQC,IAAI8B,GACZ/B,QAAQC,IAAR,sBAA2B8B,IAE3Bc,IAAKC,KAAK,CACNE,KAAM,SACNC,KAAM,+BACNF,MAAO,6CACPqB,kBAAkB,EAClBC,kBAAmB,WACnBC,mBAAoB,YACrBxE,MAAK,SAACC,GACDA,EAAKP,OAELsC,EAAgBC,GAASjC,MAAK,SAACC,GACvBA,EAAKgC,SACLK,IACAS,IAAKC,KAAK,CACNE,KAAM,UACND,MAAO,0BACPI,MAAO,KACPD,SAAU,aAGdL,IAAKC,KAAK,CACNE,KAAM,QACND,MAAO,wCA2BX,YAQA,4BAAQtD,UAAU,uBACd0E,QAAS,YA3BV,SAAClC,GACpBM,EAAQ,UACRC,EAAQP,GA0BgBsC,CAAetC,KAFvB,iBAWpB,OACI,yBAAKxC,UAAU,YACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aAGPkE,EAAU,kBAAC,EAAD,CAAUJ,MAAM,0BACtB,kBAAC,IAAD,CAGIiB,UAAW,CAAC,YAAa,KAAM,KAAM,aACrCC,OAAO,EACPC,KAAMd,EACNe,OAAO,SACPC,WAAS,EAACC,WAAS,EAACC,cAAc,SC/CvDC,EA3CI,WAAO,IAAD,EAEKpG,mBAAS,IAFd,mBAEdqC,EAFc,KAEPgE,EAFO,OAGSrG,oBAAS,GAHlB,mBAGdgF,EAHc,KAGLsB,EAHK,OAIGtG,mBAAS,SAJZ,mBAId0D,EAJc,KAIRE,EAJQ,OAKG5D,mBAAS,IALZ,mBAKd2D,EALc,KAKRE,EALQ,KAOfJ,EAAe,WACjBP,IAAW/B,MAAK,SAACC,GACbiF,EAASjF,GACTkF,GAAW,OAQnB,OAJA7D,qBAAU,WACNgB,MACD,IAGC,oCACI,yBAAK3C,UAAU,YACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,eAAd,4BAGR,kBAAC,EAAD,CACI2C,aAAcA,EACdC,KAAMA,EACNC,KAAMA,EACNC,QAASA,EACTC,QAASA,IAEb,kBAAC,EAAD,CACIxB,MAAOA,EACP2C,QAASA,EACTvB,aAAcA,EACdI,QAASA,EACTD,QAASA,MCxCZ2C,EAAU,uCAAG,8BAAA5H,EAAA,sEACCC,MAAM,GAAD,OAAIJ,EAAJ,YADN,cAChBU,EADgB,gBAEHA,EAASC,OAFN,cAEhBA,EAFgB,yBAGfA,GAHe,2CAAH,qDAMVqH,EAAc,uCAAG,WAAOC,GAAP,iBAAA9H,EAAA,sEACHC,MAAM,GAAD,OAAIJ,EAAJ,mBAAiCiI,IADnC,cACpBvH,EADoB,gBAEPA,EAASC,OAFF,cAEpBA,EAFoB,yBAGnBA,GAHmB,2CAAH,sDAMduH,EAAS,uCAAG,WAAOC,GAAP,iBAAAhI,EAAA,sEACEC,MAAM,GAAD,OAAIJ,EAAJ,WAAgC,CACxDK,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU0H,KANJ,cACfzH,EADe,gBAQFA,EAASC,OARP,cAQfA,EARe,yBASdA,GATc,2CAAH,sDCiDPyH,EA3DM,SAAC,GAAiB,IAAf/G,EAAc,EAAdA,QAAc,EACNG,mBAAS,IADH,mBAC7BoC,EAD6B,KACpByE,EADoB,KAGpCpE,qBAAU,WACR8D,IAAapF,MAAK,SAACC,GACbA,EAAK9B,IACPuH,EAAWzF,EAAKgB,cAGnB,IAEH,IAIM6C,EAAY,CAChBC,QAAS,CACP,CAAEC,MAAO,KAAMC,MAAO,aACtB,CAAED,MAAO,cAAeC,MAAO,cAC/B,CAAED,MAAO,QAASC,MAAO,eACzB,CAAED,MAAO,SAAUC,MAAO,cAC1B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,WAAYC,MAAO,aAE9BC,KAAMjD,EAAQkD,KAAI,SAACqB,GAAD,mBAAC,eACdA,GADa,IAEhBG,WAC2B,WAAzBH,EAAUG,WACR,0BAAMhG,UAAU,uBAAhB,UAEA,0BAAMA,UAAU,sBAAhB,WAEJgD,SAAU6C,EAAUI,KAAKjD,SACzBkD,SACE,4BACElG,UAAU,yBACV0E,QAAS,WAzBI,IAACiB,IA0BCE,EAAUF,UAzB/B5G,EAAQoH,KAAR,yBAA+BR,MAsB3B,sBAYN,OACE,yBAAK3F,UAAU,YACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAgBoG,YAAU,EAACpB,OAAK,EAACqB,SAAO,EAACC,UAAQ,EAACrB,KAAMd,SCxCrDoC,EAbM,SAACC,GACpB,OACE,oCACE,yBAAKxG,UAAU,YACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,eAAd,aAGJ,kBAAC,EAAD,CAAcjB,QAASyH,EAAMzH,YCCpB0H,EATK,WAChB,OACI,kDCwFOC,EAzFK,WAChB,OACI,gCACI,yBAAK1G,UAAU,+CACX,uBAAGA,UAAU,eAAe2G,KAAK,MAAjC,UACA,4BAAQ3G,UAAU,2BAA2BW,KAAK,SAASiG,cAAY,WAAWC,cAAY,qBAAqBC,gBAAc,mBAC7HC,gBAAc,QAAQC,aAAW,sBACrC,yBAAKhH,UAAU,2BAA2BiH,GAAG,oBACzC,wBAAIjH,UAAU,mCACV,wBAAIA,UAAU,YAEV,kBAAC,IAAD,CACIkH,OAAK,EACL9F,GAAI,mBACJpB,UAAU,WACVmH,gBAAiB,UAJrB,cAWJ,wBAAInH,UAAU,YACV,kBAAC,IAAD,CACIkH,OAAK,EACL9F,GAAI,eACJpB,UAAU,WACVmH,gBAAiB,UAJrB,UAWJ,wBAAInH,UAAU,YACV,kBAAC,IAAD,CACIkH,OAAK,EACL9F,GAAI,oBACJpB,UAAU,WACVmH,gBAAiB,UAJrB,eAWJ,wBAAInH,UAAU,YACV,kBAAC,IAAD,CACIkH,OAAK,EACL9F,GAAI,gBACJpB,UAAU,WACVmH,gBAAiB,UAJrB,WAWJ,wBAAInH,UAAU,YACV,kBAAC,IAAD,CACIkH,OAAK,EACL9F,GAAI,iBACJpB,UAAU,WACVmH,gBAAiB,UAJrB,aAoBR,0BAAMnH,UAAU,4BACZ,2BAAOA,UAAU,uBAAuBW,KAAK,OAAOC,YAAY,WAChE,4BAAQZ,UAAU,uCAAuCW,KAAK,UAA9D,eC2ETyG,EAxJa,SAAC,GAAe,IAAdrI,EAAa,EAAbA,QAGlB4G,EAAc0B,cAAd1B,UAH+B,EAIXzG,mBAAS,IAJE,mBAIhCoI,EAJgC,KAIxBC,EAJwB,OAKTrI,oBAAS,GALA,mBAKhCgF,EALgC,KAKvBsB,EALuB,KAqBvC,OAbA7D,qBAAU,WACN+D,EAAeC,GAAWtF,MAAK,SAACC,GAC5BC,QAAQC,IAAIF,GAGRA,EAAK9B,IACL+I,EAAUjH,EAAKgH,QAGnB9B,GAAW,QAEhB,CAACG,IAGA,oCACI,yBAAK3F,UAAU,YACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,eAAd,sBACCkE,GAAW,kBAAC,EAAD,CAAUL,KAAM,OAAQC,MAAO,mCAI9CI,GACG,oCACI,yBAAKlE,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,WAEJ,yBAAKA,UAAU,aACX,uBAAGA,UAAU,aACT,gDAA8BsH,EAAOE,YAEzC,uBAAGxH,UAAU,aACT,4CAAgD,WAAtBsH,EAAOtB,WAC7B,0BAAMhG,UAAU,uBAAhB,UACA,0BAAMA,UAAU,sBAAhB,YAER,uBAAGA,UAAU,aACT,2CAAyBsH,EAAOG,gBAKhD,yBAAKzH,UAAU,YACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,SAEJ,yBAAKA,UAAU,aACX,uBAAGA,UAAU,aACT,8CAA4BsH,EAAOrB,KAAKjD,UAE5C,uBAAGhD,UAAU,aACT,+CAA6BsH,EAAOrB,KAAKhD,aAKzD,yBAAKjD,UAAU,YACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,eAEJ,yBAAKA,UAAU,aACX,uBAAGA,UAAU,aACT,gDAA8BsH,EAAOI,QAAQvI,SAEjD,uBAAGa,UAAU,aACT,8CAA4BsH,EAAOI,QAAQtI,SAE/C,uBAAGY,UAAU,aACT,0CAAwBsH,EAAOI,QAAQtH,cAM3D,yBAAKJ,UAAU,YACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,uBAEJ,yBAAKA,UAAU,aACX,2BAAOA,UAAU,8DACb,+BACI,4BACI,iCACA,wCACA,8CACA,sCACA,2CACA,0CAGR,+BAEQsH,EAAOK,aAAanD,KAAI,SAACqB,EAAW+B,GAChC,OACI,wBAAIC,IAAKhC,EAAUiC,gBACf,4BAAKF,EAAI,GACT,4BAAK/B,EAAUkC,kBACf,4BAAKlC,EAAUmC,MAAMC,WACrB,4BACI,yBAAKC,IAAKrC,EAAUmC,MAAMG,UACtBC,MAAO,CACHC,OAAQ,SAEZC,IAAK,sBAGb,kCAAQzC,EAAUmC,MAAMO,WACxB,oCACM1C,EAAUkC,kBAAoBlC,EAAUmC,MAAMO,WAAWC,QAAQ,cAa/G,yBAAKxI,UAAU,gCACX,yBAAKA,UAAU,YACX,4BAAQA,UAAU,yBAAyB0E,QAAS,WAChD3F,EAAQ0J,WAET,uBAAGzI,UAAU,4BAHhB,mBClHjB0I,G,OAnBK,WAChB,OACI,oCACI,kBAAC,EAAD,MACA,0BAAM1I,UAAU,aACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkB,KAAM,mBAAoBC,UAAWE,IAC5C,kBAAC,IAAD,CAAOH,KAAM,oBAAqBC,UAAWgB,IAC7C,kBAAC,IAAD,CAAOjB,KAAM,eAAgBC,UAAWmE,IACxC,kBAAC,IAAD,CAAOpE,KAAM,4BAA6BC,UAAWiG,IACrD,kBAAC,IAAD,CAAOlG,KAAM,iBAAkBC,UAAWoF,IAC1C,kBAAC,IAAD,CAAOrF,KAAM,gBAAiBC,UAAWsF,IACzC,kBAAC,IAAD,CAAUrF,GAAI,0BCdnBuH,EARM,WACjB,OACI,mDCMOC,EARO,WAClB,OACI,oDCUOC,EATK,WAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO3H,KAAM,YAAaC,UAAWyH,IACrC,kBAAC,IAAD,CAAO1H,KAAM,IAAKC,UAAWwH,MCLpBG,EAFIjK,0BCiBJkK,EAhBK,SAAC,GAAiB,IAAfvG,EAAc,EAAdA,QACfwG,EAAkB/J,qBAAW6J,GAC3BG,EAAmCD,EAAnCC,cAAeC,EAAoBF,EAApBE,gBACvB,OACE,wBACElJ,UAAS,uBAA8B,OAAbiJ,QAAa,IAAbA,OAAA,EAAAA,EAAe3G,WAAYE,EAAQF,SAAW,UACxEoC,QAAS,WACPwE,EAAgB1G,KAGlB,0BAAMxC,UAAU,iBAAhB,QACA,0BAAMA,UAAU,iBAAiBwC,EAAQQ,YCJhCmG,GARK,WAChB,OACI,yBAAKnJ,UAAU,4BAA4BgE,KAAK,UAC5C,0BAAMhE,UAAU,WAAhB,gBCHCoC,GAAQ,uCAAG,8BAAAvE,EAAA,sEACCC,MAAM,GAAD,OAAIJ,EAAJ,UADN,cAChBU,EADgB,gBAEHA,EAASC,OAFN,cAEhBA,EAFgB,yBAGfA,GAHe,2CAAH,qDC+CN+K,GA1CE,WAAO,IAAD,EACKlK,mBAAS,IADd,mBACdqC,EADc,KACPgE,EADO,OAESrG,oBAAS,GAFlB,mBAEdgF,EAFc,KAELsB,EAFK,KA4BrB,OAxBA7D,qBAAU,WAER,IAAMC,EAASC,IAAGnE,GAClBkE,EAAOE,GAAG,WAAW,WACnBvB,QAAQC,IAAI,oBAEdoB,EAAOE,GAAG,eAAe,SAACuH,GACxB,IAAMC,EAAYpL,KAAKgE,MAAMmH,GAC7B9D,EAAS+D,MAEX1H,EAAOE,GAAG,cAAc,WACtBvB,QAAQC,IAAI,wBAEb,IAEHmB,qBAAU,WACRS,KAAW/B,MAAK,SAACC,GACXA,EAAK9B,KACP+G,EAASjF,EAAKiJ,SACd/D,GAAW,SAGd,IAGD,yBAAKxF,UAAU,SACb,wBAAIA,UAAU,gBACXkE,GAAW,kBAAC,GAAD,OACVA,GACA3C,EAAMiD,KAAI,SAAChC,GACT,OAAO,kBAAC,EAAD,CAAaA,QAASA,EAASqF,IAAKrF,EAAQF,cAGzD,yBAAKtC,UAAU,kBCzCRwJ,GAAW,SAACC,GAAS,IAAD,EACDvK,mBAAS,CAAEwK,OAAQ,KAAMxF,SAAS,IADjC,mBACtByF,EADsB,KACdC,EADc,KAiB7B,OAdAjI,qBAAU,YACU,uCAAG,8BAAA9D,EAAA,sEACEC,MAAM,GAAD,OAAIJ,GAAJ,OAAyB+L,IADhC,cACXnJ,EADW,gBAEEA,EAAKjC,OAFP,OAEXA,EAFW,OAIfuL,EAAU,CACNF,OAAQrL,EACR6F,SAAS,IANE,2CAAH,qDAUhB2F,KACD,IAEIF,GCeIG,GA9BO,WAAO,IAAD,EACIN,GAAS,cAA7BE,EADgB,EAChBA,OAAQxF,EADQ,EACRA,QACV8E,EAAkB/J,qBAAW6J,GAC3BiB,EAA6Cf,EAA7Ce,qBAAsBC,EAAuBhB,EAAvBgB,mBAG9B,OACI,yBAAKhK,UAAU,qBACVkE,GAAW,kBAAC,GAAD,OACVA,GACEwF,EAAOH,QAAQ/E,KAAI,SAACyF,GAEhB,IAAMC,GAA2B,OAAlBF,QAAkB,IAAlBA,OAAA,EAAAA,EAAoBG,gBAAiBF,EAAaE,aAAe,SAAW,GAE3F,OACI,4BACInK,UAAS,sCAAiCkK,GAC1CrC,IAAKoC,EAAaE,aAClBzF,QAAS,WACLqF,EAAqBE,KAGxBA,EAAaG,oBCG3BC,GA3BM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEZC,EADgBtL,qBAAW6J,GAC3ByB,iBAER,OACI,yBAAKvK,UAAU,gBACX,yBACIkI,IAAKoC,EAASnC,UACdG,IAAI,KAER,wBAAItI,UAAU,iBAAiBsK,EAASrC,WACxC,0BAAMjI,UAAU,iBAAhB,MAAoCsK,EAAS/B,WAC7C,yBAAKvI,UAAU,kBACX,4BAAQA,UAAU,4CAAlB,MAGA,4BAAQA,UAAU,0CAA0C0E,QAAS,WACjE6F,EAAiBD,EAASE,YAD9B,SCbHC,GAAsB,uCAAG,WAAOC,GAAP,iBAAA7M,EAAA,sEACXC,MAAM,GAAD,OACrBJ,EADqB,sBACWgN,EADX,YADM,cAC5BtM,EAD4B,gBAGfA,EAASC,OAHM,cAG5BA,EAH4B,yBAI3BA,GAJ2B,2CAAH,sDC4BpBsM,GA7BG,WAAO,IAAD,EAEQzL,mBAAS,IAFjB,mBAEb0L,EAFa,KAELC,EAFK,KAKZb,EADgB/K,qBAAW6J,GAC3BkB,mBAaR,OAXArI,qBAAU,WACFqI,GACAS,GAAuBT,EAAmBG,cAAc9J,MAAK,SAACC,GAC1DC,QAAQC,IAAIF,GACRA,EAAK9B,IACLqM,EAAUvK,EAAKiJ,QAAQuB,aAIpC,CAACd,IAGA,yBAAKhK,UAAU,iBAEP4K,EAAOpG,KAAI,SAAC8F,GACR,OAAO,kBAAC,GAAD,CAAcA,SAAUA,EAAUzC,IAAKyC,EAASE,gBCC5DO,GAxBa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EAClBxB,GAAS,UAAD,OAAWwB,EAAWR,WAAlDtG,EADsC,EACtCA,QAASwF,EAD6B,EAC7BA,OAIjB,OAEExF,EAAU,kBAAC,GAAD,MAER,wBAAIlE,UAAU,iBACZ,uBAAGA,UAAU,mBACX,8BACE,gCAAS0J,EAAOH,QAAQtB,YAE1B,4CAAkByB,EAAOH,QAAQhB,YAEnC,uBAAGvI,UAAU,qBAAqBgL,EAAWjD,kBAC7C,uBAAG/H,UAAU,mBACX,wCAAc0J,EAAOH,QAAQhB,WAAayC,EAAWjD,kBAAkBS,QAAQ,OCG1EyC,GApBS,WAEpB,IAAMjC,EAAkB/J,qBAAW6J,GAC3BoC,EAAiClC,EAAjCkC,cAAejC,EAAkBD,EAAlBC,cAEjBkC,EAAeD,EAAcE,MAAK,SAACvF,GAAD,OAAeA,EAAUvD,UAAY2G,EAAc3G,WAG3F,OACI,wBAAItC,UAAU,kBAELmL,EACDA,EAAaE,aAAa7G,KAAI,SAACwG,EAAWpD,GACtC,OAAO,kBAAC,GAAD,CAAqBC,IAAKD,EAAGoD,WAAYA,OAFpC,iEC6BjBM,GAtCH,WACV,IAAMtC,EAAkB/J,qBAAW6J,GAC3BG,EAA+BD,EAA/BC,cAAesC,EAAgBvC,EAAhBuC,YAEvB,OACE,6BAASvL,UAAU,SACjB,kBAAC,GAAD,MACA,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACb,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEF,yBAAKA,UAAU,UACb,sCACA,yBAAKA,UAAU,WACZiJ,EACC,oCACE,wBAAIjJ,UAAU,iBAAd,QAAoCiJ,EAAcjG,UAClD,uBAAGhD,UAAU,oBAAb,kBACA,6BACA,kBAAC,GAAD,MACA,4BAAQA,UAAU,kCAChB0E,QAAS,WACP6G,MAFJ,UAQA,sFCKDC,I,OAAAA,aApCG,SAAC,GAAiB,IAAfzM,EAAc,EAAdA,QAEX0M,EAAmBxM,qBAAWL,GAC5BO,EAA0BsM,EAA1BtM,QAASuM,EAAiBD,EAAjBC,aAEjB,OACI,4BAAQ1L,UAAU,UACd,yBAAKA,UAAU,gBACX,yBAAKkI,IAAI,uBAAuBI,IAAI,MAExC,yBAAKtI,UAAU,oBACX,yBAAKkI,IAAI,yBAAyBI,IAAI,KACtC,2BACI3H,KAAK,OACLX,UAAU,gBACVY,YAAY,yBAGpB,yBAAKZ,UAAU,mBACX,yBAAKkI,IAAI,iDAAiDI,IAAI,KAC9D,8BAAOnJ,GACP,4BACIa,UAAU,sBACV0E,QAAS,WACLgH,IACA3M,EAAQ0B,QAAQ,OAJxB,0BCSDkL,GA9BO,WAKlB,OACI,yBAAK3L,UAAU,QACX,wBAAIA,UAAU,eACV,4BACI,yBAAKkI,IAAI,+BAA+BI,IAAI,KAC5C,0CAEJ,4BACI,yBAAKJ,IAAI,+BAA+BI,IAAI,KAC5C,0CAEJ,4BACI,yBAAKJ,IAAI,+BAA+BI,IAAI,KAC5C,0CAEJ,4BACI,yBAAKJ,IAAI,+BAA+BI,IAAI,KAC5C,6C,SCJLsD,GAvBI,SAACC,EAAaC,GAC/B,OAAQA,EAAOnL,MACb,IAAK,mBACH,OAAO,2BACFkL,GADL,IAEE5C,cAAe6C,EAAO7G,OAG1B,IAAK,wBACH,OAAO,2BACF4G,GADL,IAEE7B,mBAAoB8B,EAAO7G,OAE/B,IAAK,4BACH,OAAO,2BACF4G,GADL,IAEEX,cAAeY,EAAO7G,SC2Jf8G,I,OArKE,SAACvF,GAAW,IAAD,EACAwF,qBAAWJ,GAAY,CAC/C3C,cAAe,KACfe,mBAAoB,KAEpBkB,cAAe,CACb,CACE5I,QAAS,EACTkF,WAAY,MACZxB,WAAY,SACZqF,aAAc,CACZ,CACEb,SAAU,EACVzC,iBAAkB,KAKxB,CACEzF,QAAS,EACTkF,WAAY,MACZxB,WAAY,SACZqF,aAAc,CACZ,CACEb,SAAU,EACVzC,iBAAkB,GAEpB,CACEyC,SAAU,EACVzC,iBAAkB,QA7BF,mBACnBkE,EADmB,KACZC,EADY,KAqJ1B,OACE,kBAAC,EAAWC,SAAZ,CACEpM,MAAO,CACLkJ,cAAegD,EAAMhD,cACrBe,mBAAoBiC,EAAMjC,mBAC1BkB,cAAee,EAAMf,cACrBnB,qBA5GuB,SAACE,GAC5BiC,EAAS,CACPvL,KAAM,wBACNsE,KAAK,eAAMgF,MA0GTf,gBApHkB,SAAC1G,GACvB0J,EAAS,CACPvL,KAAM,mBACNsE,KAAK,eAAMzC,MAkHT+H,iBAvGmB,SAACC,GAAc,IAC9BvB,EAAiCgD,EAAjChD,cAAeiC,EAAkBe,EAAlBf,cAEvB,GAAKjC,EAAL,CAGA,IAAMkC,EAAeD,EAAcE,MACjC,SAACvF,GAAD,OAAeA,EAAUvD,UAAY2G,EAAc3G,WAGrD,GAAI6I,EAAc,CAMhB,GALkBA,EAAaE,aAAaD,MAC1C,SAACgB,GAAD,OAAoBA,EAAe5B,WAAaA,KAIjC,CAEf,IAAM6B,EAAkB,aACnBnB,EAAc1G,KAAI,SAACqB,GACpB,OAAIA,EAAUvD,UAAY2G,EAAc3G,SACtCuD,EAAUwF,aAAaiB,SAAQ,SAAChC,GAC1BA,EAASE,WAAaA,IACxBF,EAASvC,kBAAoB,MAG1BlC,GAGFA,MAGXqG,EAAS,CACPvL,KAAM,4BACNsE,KAAMoH,QAEH,CAGL,IAAMA,EAAkB,aACnBnB,EAAc1G,KAAI,SAACqB,GACpB,OAAIA,EAAUvD,UAAY2G,EAAc3G,SACtCuD,EAAUwF,aAAalF,KAAK,CAC1BqE,SAAUA,EACVzC,iBAAkB,IAEblC,GAEFA,MAGXqG,EAAS,CACPvL,KAAM,4BACNsE,KAAMoH,SAIL,CAEL,IAAMA,EAAkB,uBAAOnB,GAAP,CACxB,CACE5I,QAAS2G,EAAc3G,QACvBkF,WAAY,MACZxB,WAAY,YACZqF,aAAc,CACZ,CACEb,SAAUA,EACVzC,iBAAkB,OAKxBmE,EAAS,CACPvL,KAAM,4BACNsE,KAAMoH,OA8BNd,YAvBc,WAAO,IACjBL,EAAiCe,EAAjCf,cAAejC,EAAkBgD,EAAlBhD,cACnBkC,EAAeD,EAAcE,MAAK,SAACvF,GAAD,OAAgBA,EAAUvD,UAAY2G,EAAc3G,WAC1F6I,EAAa1D,YAAc,sBAC3B0D,EAAaoB,OAAS,EAItB3G,EAAUuF,GAAc9K,MAAK,SAACC,GAC5BC,QAAQC,IAAIF,SAiBXkG,EAAMgG,YChJEC,GAfG,WACd,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,MACA,0BAAMzM,UAAU,iBACZ,kBAAC,GAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkB,KAAM,OAAQC,UAAWmK,SCOrCoB,GAlBK,SAAC,GAAsC,IAApCxL,EAAmC,EAAnCA,KAAkByL,EAAiB,EAA7BC,WAEnBnB,EAAmBxM,qBAAWL,GAC5BiO,EAA0BpB,EAA1BoB,YAER,OAFkCpB,EAAbqB,SAGV,2CAEAD,EACH,kBAAC,IAAD,CAAO3L,KAAMA,EAAMC,UAAWwL,IAE1B,kBAAC,IAAD,CAAUvL,GAAI,OCiBf2L,GAvBI,WAIf,OACI,kBAAC,IAAD,CAAYC,SAAS,KAIjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO9L,KAAM,QAASC,UAAWF,IACjC,kBAAC,GAAD,CAAaC,KAAM,SAAU0L,WAAYlE,IACzC,kBAAC,GAAD,CAAaxH,KAAM,OAAQ0L,WAAYH,KAIvC,kBAAC,IAAD,CAAOvL,KAAM,IAAKC,UAAW0H,OCC9BoE,I,OA1BK,SAACpB,EAAaC,GAE9B,OAAQA,EAAOnL,MACX,IAAK,iBACD,MAAO,CACHkM,aAAa,EACb1N,QAAS2M,EAAO7G,KAAK9F,QACrBoN,OAAQT,EAAO7G,KAAKsH,OACpBhO,MAAOuN,EAAO7G,KAAK1G,MACnBuO,UAAU,GAElB,IAAK,gBAED,OADAI,aAAaC,WAAW,SACjB,CACHN,aAAa,EACb1N,QAAS,KACToN,OAAQ,KACRhO,MAAO,KACPuO,UAAU,GAGlB,QACI,OAAO,eAAKjB,MC+DTuB,GAhFG,SAAC5G,GAAW,IAAD,EACCwF,qBAAWiB,GAAa,CAC9CJ,aAAa,EACb1N,QAAS,KACToN,OAAQ,KACRhO,MAAO,KACPuO,UAAU,IANW,mBAClBb,EADkB,KACXC,EADW,KASzBvK,qBAAU,WACN0L,MACF,IAEF,IAAMA,EAA+B,WACjC,GAAIH,aAAaI,QAAQ,SAAzB,CAEA,IAAM/O,EAAQ2O,aAAaI,QAAQ,SAE7BC,EAAahP,EAAMiP,MAAM,KAAK,GAC9BC,EAAaC,OAAOC,KAAKJ,GACzBK,EAAc1P,KAAKgE,MAAMuL,GAE/BnP,EAAcC,GAAO8B,MAAK,SAACC,GAChB4L,EAAP5L,EAAgB,CACZK,KAAK,iBACLsE,KAAK,2BACE2I,GADH,IAEArP,WAEM,CACVoC,KAAK,uBAmCjB,OACI,kBAAC,EAAYwL,SAAb,CACIpM,MAAO,CACH8M,YAAaZ,EAAMY,YACnB1N,QAAS8M,EAAM9M,QACfoN,OAAQN,EAAMM,OACdO,SAAUb,EAAMa,SAChB9N,cApCU,SAACT,GAEnB,IAAMgP,EAAahP,EAAMiP,MAAM,KAAK,GAK9BC,EAAaC,OAAOC,KAAKJ,GACzBK,EAAc1P,KAAKgE,MAAMuL,GAE/BP,aAAaW,QAAQ,QAAQtP,GAE7B2N,EAAS,CACLvL,KAAM,iBACNsE,KAAK,2BACE2I,GADH,IAEArP,MAAMA,OAqBNmN,aAdS,WACjBQ,EAAS,CACLvL,KAAM,qBAeL6F,EAAMgG,WCpEJsB,GARH,WACV,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,QCHNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.cab37ad3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AuthRecover = () => {\r\n    return (\r\n        <div>\r\n            PAGINA DE RECUPERACION DE CONTRASEÑA\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthRecover\r\n","export const URL_BACKEND = \"https://5f35f3e75b91f60016ca5253.mockapi.io\";\r\nexport const URL_BACKEND_HEROKU = \"https://codigo3-pedidos.herokuapp.com\";\r\n\r\n// https://5f35f3e75b91f60016ca5253.mockapi.io","import { URL_BACKEND_HEROKU } from \"../enviroment/enviroment\";\r\n\r\nexport const postRegister = async (objUsuario) => {\r\n    const response = await fetch(`${URL_BACKEND_HEROKU}/registro`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(objUsuario),\r\n    });\r\n    const json = await response.json();\r\n    return json;\r\n};\r\n\r\nexport const postVerificar = async (token) => {\r\n    const response = await fetch(`${URL_BACKEND_HEROKU}/verificar`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`,\r\n        }\r\n    });\r\n    const json = await response.json();\r\n    return json.ok;\r\n};\r\n\r\nexport const postLogin = async (correo, password) => {\r\n    const response = await fetch(`${URL_BACKEND_HEROKU}/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            correo, \r\n            password,\r\n        }),\r\n    });\r\n    const json = await response.json();\r\n    return json;\r\n};","import { createContext } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { postRegister } from '../../../services/auth';\r\nimport { useContext } from 'react';\r\nimport AuthContext from '../../../context/auth/authContext';\r\n\r\nconst AuthRegister = ({ history }) => {\r\n\r\n    const localAuthContext = useContext(AuthContext);\r\n    const { iniciarSesion } = localAuthContext;\r\n\r\n\r\n    const [formulario, setFormulario] = useState({\r\n        usu_nom: \"\",\r\n        usu_ape: \"\",\r\n        usu_email: \"\",\r\n        pass1: \"\",\r\n        pass2: \"\",\r\n        error: false,\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setFormulario({\r\n            ...formulario,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const { usu_ape, usu_email, usu_nom, pass1, pass2 } = formulario;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            usu_ape.trim() !== \"\" &&\r\n            usu_nom.trim() !== \"\" &&\r\n            usu_email.trim() !== \"\" &&\r\n            pass1.trim() !== \"\" &&\r\n            pass1 === pass2\r\n        ) {\r\n            const objUsuario = {\r\n                ...formulario,\r\n                password: pass1,\r\n                usu_tipo: \"admin\",\r\n\r\n            };\r\n            postRegister(objUsuario).then((rpta) => {\r\n                console.log(rpta);\r\n                if (rpta.ok) {\r\n                    iniciarSesion(rpta.token);\r\n                    // history.replace(\"ruta\") borra el historial de páginas visitadas en el dominio y\r\n                    // cancela la posibilidad de hacer \"atras\" en el navegador\r\n                    history.replace(\"/pos\");\r\n                    // history.push(\"/pos\");\r\n\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main className=\"login\">\r\n            <div className=\"login__form\">\r\n                <h1>Crear cuenta</h1>\r\n                <form className=\"formulario\" onSubmit={handleSubmit}>\r\n                    <label htmlFor=\"\">Nombre:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"formulario__input\"\r\n                        placeholder=\"Nombre\"\r\n                        name=\"usu_nom\"\r\n                        value={formulario.usu_nom}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <label htmlFor=\"\">Apellido:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"formulario__input\"\r\n                        placeholder=\"Apellido\"\r\n                        name=\"usu_ape\"\r\n                        value={formulario.usu_ape}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <label htmlFor=\"\">Email:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"formulario__input\"\r\n                        placeholder=\"Email\"\r\n                        name=\"usu_email\"\r\n                        value={formulario.usu_email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <label htmlFor=\"\">Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"formulario__input\"\r\n                        placeholder=\"Password\"\r\n                        name=\"pass1\"\r\n                        value={formulario.pass1}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <label htmlFor=\"\">Repita Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"formulario__input\"\r\n                        placeholder=\"Password\"\r\n                        name=\"pass2\"\r\n                        value={formulario.pass2}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button className=\"formulario__submit\" type=\"submit\">\r\n                        Registrarse\r\n          </button>\r\n                </form>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default AuthRegister\r\n","import React, { useContext } from 'react'\r\nimport { useState } from 'react'\r\nimport AuthContext from '../../../context/auth/authContext';\r\nimport { postLogin } from '../../../services/auth';\r\n\r\nconst AuthLogin = ({ history }) => {\r\n\r\n  const localAuthContext = useContext(AuthContext);\r\n  const { iniciarSesion } = localAuthContext;\r\n\r\n  const [formulario, setFormulario] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    // TODO: validar los campos del formulario e inclusive generar una variable \r\n    // de estado de error en el formulario\r\n    postLogin(formulario.email, formulario.password).then((rpta) => {\r\n      if (rpta.ok) {\r\n        iniciarSesion(rpta.token);\r\n        history.replace(\"/pos\");\r\n      }\r\n\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <main className=\"login\">\r\n      <div className=\"login__form\">\r\n        <h1>Inicio de Sesión</h1>\r\n        <form className=\"formulario\" onSubmit={onSubmit}>\r\n          <label for=\"\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={formulario.email}\r\n            onChange={handleChange}\r\n          />\r\n          <label for=\"\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={formulario.password}\r\n            onChange={handleChange}\r\n          />\r\n          <button className=\"formulario__submit\" type=\"submit\">\r\n            Iniciar Sesión\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default AuthLogin\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport AuthRecover from '../modules/auth/screens/AuthRecover';\r\nimport AuthRegister from '../modules/auth/screens/AuthRegister';\r\nimport AuthLogin from '../modules/auth/screens/AuthLogin';\r\nimport \"./../modules/auth/styles/auth.css\";\r\n\r\nconst RouterAuth = () => {\r\n    return (\r\n        <>\r\n            {/* Podria colocar contenido estatico */}\r\n            <Switch>\r\n                <Route path={\"/auth/login\"} component={AuthLogin} />\r\n                <Route path={\"/auth/register\"} component={AuthRegister} />\r\n                <Route path={\"/auth/recover\"} component={AuthRecover} />\r\n                <Redirect to={\"/auth/login\"} />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RouterAuth\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { URL_BACKEND_HEROKU } from \"../../../enviroment/enviroment\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst AdminDashboard = () => {\r\n  // ir haciendo logica para consuimir sockets del bacjend\r\n  const [reporte, setReporte] = useState({\r\n    pedidos: \"cargando...\",\r\n    mesas: \"cargando...\",\r\n    categorias: \"cargando...\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const socket = io(URL_BACKEND_HEROKU);\r\n\r\n    socket.on(\"connect\", ()=>{\r\n        socket.emit(\"peticion-reporte-dashboard\");\r\n    });\r\n\r\n    socket.on(\"reporte-dashboard\", (dataString) => {\r\n      const dataJSON = JSON.parse(dataString);\r\n      setReporte(dataJSON);\r\n      /**\r\n       * {\r\n       *  pedidos: 5,\r\n       *  mesas: 7,\r\n       *  categorias: 9\r\n       * }\r\n       */\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col\">\r\n          <h1 className=\"display-4 text-center\">DASHBOARD</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">\r\n              <h5 className=\"card-title text-center\">Pedidos</h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"display-4 text-center\">{reporte.pedidos}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">\r\n              <h5 className=\"card-title text-center\">Mesas</h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"display-4 text-center\">{reporte.mesas}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">\r\n              <h5 className=\"card-title text-center\">Categorias</h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"display-4 text-center\">{reporte.categorias}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import React from 'react'\r\n\r\nconst AdminCategorias = () => {\r\n    return (\r\n        <div>\r\n            Pag Admin Categorias\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminCategorias\r\n","import { URL_BACKEND } from \"../enviroment/enviroment\";\r\n\r\nexport const getMesas = async () => {\r\n    const response = await fetch(`${URL_BACKEND}/mesas`);\r\n    const json = await response.json();\r\n    return  json;\r\n};\r\n\r\nexport const deleteMesasById = async (mesa_id) => {\r\n    const response = await fetch(`${URL_BACKEND}/mesas/${mesa_id}`,{\r\n        method:\"DELETE\",\r\n    });\r\n    const json = await response.json();\r\n    return json; \r\n};\r\n\r\nexport const postMesa = async (objMesa) => {\r\n    const response = await fetch(`${URL_BACKEND}/mesas`,{\r\n        method:\"POST\",\r\n        headers: {\r\n            \"Content-type\":\"application/json\",\r\n\r\n        },\r\n        body:JSON.stringify(objMesa),\r\n    });\r\n    const json = await response.json();\r\n    return json;\r\n};\r\n\r\nexport const putMesaById = async (objMesa) =>{\r\n    const response = await fetch(`${URL_BACKEND}/mesas/${objMesa.mesa_id}`,{\r\n        method:\"PUT\",\r\n        headers: {\r\n            \"Content-type\":\"application/json\",\r\n        },\r\n        body:JSON.stringify(objMesa),\r\n    });\r\n    const json = await response.json();\r\n    return json;\r\n};","import React, { useState, useEffect } from 'react'\r\nimport { postMesa, putMesaById } from '../../../services/services';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst MesasFormulario = ({ obtenerMesas, modo, mesa, setModo, setMesa }) => {\r\n\r\n    const [form, setForm] = useState({\r\n        mesa_nro: \"\",\r\n        mesa_cap: 0,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (modo === \"editar\") {\r\n            setForm(mesa);\r\n        }\r\n        // si la variable mesa cambia de valor\r\n        // la funcion useEffect se vuelve a ejecutar\r\n    }, [mesa,modo]);\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (form.mesa_cap > 0 && form.mesa_nro.trim() !== \"\") {\r\n            if (modo === \"crear\") {\r\n                postMesa(form).then((rpta) => {\r\n                    // console.log(rpta);\r\n                    if (rpta.mesa_id) {\r\n                        setForm({\r\n                            mesa_nro: \"\",\r\n                            mesa_cap: 0\r\n                        });\r\n\r\n                        obtenerMesas();\r\n                        Swal.fire({\r\n                            title: \"Creaddoooo\",\r\n                            icon: \"success\",\r\n                            text: \"Registro creado exitosamente\",\r\n                            position: \"top-end\",\r\n                            timer: 1500,\r\n                            showConfirmButton: false,\r\n                        });\r\n\r\n                    }\r\n                });\r\n            } else {\r\n                putMesaById(form).then((rpta) => {\r\n                    // console.log(rpta);\r\n\r\n                    if (rpta.mesa_id) {\r\n                        setForm({ mesa_nro: \"\", mesa_cap: 0 });\r\n                        obtenerMesas();\r\n                        setModo(\"crear\");\r\n                        setMesa({});\r\n                        Swal.fire({\r\n                            icon: \"success\",\r\n                            title: \"Registro correctamente actualizado\",\r\n                            timer: 1500,\r\n                            position: \"top-end\",\r\n                            showConfirmButton: false,\r\n                        });\r\n                    }\r\n\r\n                });\r\n            };\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <div className=\"card shadow\">\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\">Nro. mesa:</label>\r\n                                <input\r\n                                    value={form.mesa_nro}\r\n                                    name=\"mesa_nro\"\r\n                                    onChange={handleChange}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"número de mesa\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\">Capacidad:</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Capacidad...\"\r\n                                    value={form.mesa_cap}\r\n                                    name=\"mesa_cap\"\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\">\r\n                                    {modo === \"crear\" ? <>Crear</> : <>Editar</>}\r\n                                </button>\r\n                                <button className=\"btn btn-secondary ml-3\" type=\"button\">Cancelar</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MesasFormulario\r\n","import React from 'react'\r\n\r\nconst Cargando = ({ tipo = \"info\", texto }) => {\r\n\r\n    const clase = `alert alert-${tipo}`;\r\n\r\n    return (\r\n\r\n        <div className={clase} role=\"alert\">\r\n            <h4 className=\"alert-heading\">Cargando...</h4>\r\n            <p><i className=\"fas fa-spinner fa-2x fa-spin\"></i></p>\r\n            <p>{texto}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cargando\r\n","import React from 'react'\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport { deleteMesasById } from '../../../services/services';\r\nimport Swal from 'sweetalert2'\r\nimport Cargando from './Cargando';\r\n\r\nconst MesasTabla = ({ mesas, loading, obtenerMesas, setMesa, setModo }) => {\r\n\r\n    const eliminarMesaById = (mesa_id) => {\r\n        console.log(mesa_id);\r\n        console.log(`Eliminando: ${mesa_id}`);\r\n\r\n        Swal.fire({\r\n            icon: \"danger\",\r\n            text: \"Los cambos son irreversibles\",\r\n            title: \"¿Seguro que desea eliminar el registro?\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"ELIMINAR\",\r\n            confirmButtonColor: \"#de0a0a\",\r\n        }).then((rpta) => {\r\n            if (rpta.value) {\r\n                //si, eliminar\r\n                deleteMesasById(mesa_id).then((rpta) => {\r\n                    if (rpta.mesa_id) {\r\n                        obtenerMesas();\r\n                        Swal.fire({\r\n                            icon: \"success\",\r\n                            title: \"Eliminado correctamente\",\r\n                            timer: 1500,\r\n                            position: \"top end\",\r\n                        });\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: \"error\",\r\n                            title: \"Hubo errores en el servidor\",\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    const editarMesaById = (objMesa) => {\r\n        setModo(\"editar\");\r\n        setMesa(objMesa);\r\n    };\r\n\r\n    const datatable = {\r\n        columns: [\r\n            { label: 'ID', field: 'mesa_id' },\r\n            { label: 'Nro_mesa', field: 'mesa_nro' },\r\n            { label: 'Capacidad', field: 'mesa_cap' },\r\n            { label: 'Acciones', field: 'mesa_acciones' }\r\n        ],\r\n        rows: mesas.map((objMesa) => {\r\n            return {\r\n                ...objMesa,\r\n                mesa_cap: objMesa.mesa_cap + \" personas\",\r\n                mesa_acciones: (\r\n                    <>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {\r\n                                eliminarMesaById(objMesa.mesa_id);\r\n                            }}\r\n                        >\r\n                            Eliminar\r\n                        </button>\r\n                        <button className=\"btn btn-warning ml-2\"\r\n                            onClick={() => {\r\n                                editarMesaById(objMesa);\r\n                            }}\r\n                        >Editar</button>\r\n                    </>\r\n                ),\r\n            }\r\n        }),\r\n    };\r\n\r\n    return (\r\n        <div className=\"row mt-4\">\r\n            <div className=\"col\">\r\n                <div className=\"card shadow\">\r\n                    <div className=\"card-body\">\r\n                        {/* <Cargando tipo=\"danger\" texto=\"Este es un texto de prueba\" /> */}\r\n                        {\r\n                            loading ? <Cargando texto=\"Cargando los datos...\" /> :\r\n                                <MDBDataTableV5\r\n                                    // entrieslabel={\"mostrando\"}\r\n                                    // searchingLabel={\"Buscar\"}\r\n                                    infoLabel={['Mostrando', \"al\", 'de', \"registros\"]}\r\n                                    hover={true}\r\n                                    data={datatable}\r\n                                    filter='office'\r\n                                    proSelect searchTop searchBottom={false} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MesasTabla\r\n","import React, { useState, useEffect } from 'react'\r\nimport MesasFormulario from '../components/MesasFormulario'\r\nimport MesasTabla from '../components/MesasTabla'\r\nimport { getMesas } from '../../../services/services';\r\n\r\nconst AdminMesas = () => {\r\n\r\n    const [mesas, setMesas] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [modo, setModo] = useState(\"crear\");\r\n    const [mesa, setMesa] = useState({});\r\n\r\n    const obtenerMesas = () => {\r\n        getMesas().then((rpta) => {\r\n            setMesas(rpta);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        obtenerMesas();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col\">\r\n                    <h1 className=\"text-center\">Mantenimiento de Mesas</h1>\r\n                </div>\r\n            </div>\r\n            <MesasFormulario \r\n                obtenerMesas={obtenerMesas}\r\n                modo={modo}\r\n                mesa={mesa}\r\n                setModo={setModo}\r\n                setMesa={setMesa}\r\n                />\r\n            <MesasTabla \r\n                mesas={mesas} \r\n                loading={loading} \r\n                obtenerMesas={obtenerMesas}\r\n                setMesa={setMesa}\r\n                setModo={setModo}\r\n                />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AdminMesas\r\n","import { URL_BACKEND_HEROKU } from \"../enviroment/enviroment\";\r\n\r\nexport const getPedidos = async () => {\r\n    const response = await fetch(`${URL_BACKEND_HEROKU}/pedido`);\r\n    const json = await response.json();\r\n    return json;\r\n};\r\n\r\nexport const getPedidosById = async (pedido_id) =>{\r\n    const response = await fetch(`${URL_BACKEND_HEROKU}/pedido/${pedido_id}`);\r\n    const json = await response.json();\r\n    return json; \r\n};\r\n\r\nexport const posPedido = async (objPedido) => {\r\n    const response = await fetch(`${URL_BACKEND_HEROKU}/pedido`,{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(objPedido),\r\n    });\r\n    const json = await response.json();\r\n    return json;\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { getPedidos } from \"../../../services/pedidos\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\n\r\nconst PedidosTabla = ({ history }) => {\r\n  const [pedidos, setPedidos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPedidos().then((rpta) => {\r\n      if (rpta.ok) {\r\n        setPedidos(rpta.pedidos);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const irAVerPedido = (pedido_id) => {\r\n    history.push(`/admin/pedidos/${pedido_id}`);\r\n  };\r\n\r\n  const datatable = {\r\n    columns: [\r\n      { label: \"ID\", field: \"pedido_id\" },\r\n      { label: \"Nro. Pedido\", field: \"pedido_nro\" },\r\n      { label: \"Fecha\", field: \"pedido_fech\" },\r\n      { label: \"Estado\", field: \"pedido_est\" },\r\n      { label: \"Nro Mesa\", field: \"mesa_nro\" },\r\n      { label: \"Acciones\", field: \"acciones\" },\r\n    ],\r\n    rows: pedidos.map((objPedido) => ({\r\n      ...objPedido,\r\n      pedido_est:\r\n        objPedido.pedido_est === \"pagado\" ? (\r\n          <span className=\"badge badge-success\">Pagado</span>\r\n        ) : (\r\n          <span className=\"badge badge-danger\">Anulado</span>\r\n        ),\r\n      mesa_nro: objPedido.Mesa.mesa_nro,\r\n      acciones: (\r\n        <button\r\n          className=\"btn btn-block btn-dark\"\r\n          onClick={() => {\r\n            irAVerPedido(objPedido.pedido_id);\r\n          }}\r\n        >\r\n          Ver Detalles\r\n        </button>\r\n      ),\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <div className=\"row mt-4\">\r\n      <div className=\"col\">\r\n        <div className=\"card shadow\">\r\n          <div className=\"card-body\">\r\n            <MDBDataTableV5 responsive hover striped bordered data={datatable} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PedidosTabla;\r\n","import React from \"react\";\r\nimport PedidosTabla from \"./../components/PedidosTabla\";\r\nconst AdminPedidos = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col\">\r\n          <h1 className=\"text-center\">Pedidos</h1>\r\n        </div>\r\n      </div>\r\n      <PedidosTabla history={props.history} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPedidos;\r\n","import React from 'react'\r\n\r\nconst AdminPlatos = () => {\r\n    return (\r\n        <div>\r\n            Pag Admin Platos\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPlatos\r\n","import React from 'react';\r\nimport {  NavLink } from \"react-router-dom\";\r\n\r\nconst AdminHeader = () => {\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand\" href=\"!#\">Navbar</a>\r\n                <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"!#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\r\n                    aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\r\n                <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n                    <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                        <li className=\"nav-item\">\r\n\r\n                            <NavLink\r\n                                exact\r\n                                to={\"/admin/dashboard\"}\r\n                                className=\"nav-link\"\r\n                                activeClassName={\"active\"}\r\n                            >\r\n                                Dashboard\r\n                            </NavLink>\r\n                            {/* <a className=\"nav-link\" href=\"!#\">Home <span className=\"sr-only\">(current)</span></a> */}\r\n\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                exact\r\n                                to={\"/admin/mesas\"}\r\n                                className=\"nav-link\"\r\n                                activeClassName={\"active\"}\r\n                            >\r\n                                Mesas\r\n                            </NavLink>\r\n                            {/* <a className=\"nav-link\" href=\"!#\">Link</a> */}\r\n\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                exact\r\n                                to={\"/admin/categorias\"}\r\n                                className=\"nav-link\"\r\n                                activeClassName={\"active\"}\r\n                            >\r\n                                Categorias\r\n                            </NavLink>\r\n                            {/* <a className=\"nav-link\" href=\"!#\">Link</a> */}\r\n\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                exact\r\n                                to={\"/admin/platos\"}\r\n                                className=\"nav-link\"\r\n                                activeClassName={\"active\"}\r\n                            >\r\n                                Platos\r\n                            </NavLink>\r\n                            {/* <a className=\"nav-link\" href=\"!#\">Link</a> */}\r\n\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                exact\r\n                                to={\"/admin/pedidos\"}\r\n                                className=\"nav-link\"\r\n                                activeClassName={\"active\"}\r\n                            >\r\n                                Pedidos\r\n                            </NavLink>\r\n                            {/* <a className=\"nav-link\" href=\"!#\">Link</a> */}\r\n\r\n                        </li>\r\n\r\n                        {/* <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"!#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\r\n                                <a className=\"dropdown-item\" href=\"!#\">Action 1</a>\r\n                                <a className=\"dropdown-item\" href=\"!#\">Action 2</a>\r\n                            </div>\r\n                        </li> */}\r\n                    </ul>\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AdminHeader\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { getPedidosById } from '../../../services/pedidos';\r\nimport Cargando from '../components/Cargando';\r\n\r\nconst AdminPedidosDetalle = ({history}) => {\r\n\r\n    // console.log(props.match.params.pedido_id);\r\n    const { pedido_id } = useParams();\r\n    const [pedido, setPedido] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        getPedidosById(pedido_id).then((rpta) => {\r\n            console.log(rpta);\r\n            // Si el 1ro sale TRUE, entonces ejecuta el 2do\r\n            // rpta.ok && setPedido(rpta.pedido);\r\n            if (rpta.ok) {\r\n                setPedido(rpta.pedido);\r\n                // setMesa(rpta.pedido.Mesa);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }, [pedido_id]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col\">\r\n                    <h1 className=\"text-center\">Detalle de Pedidos</h1>\r\n                    {loading && <Cargando tipo={\"info\"} texto={\"Cargando detalle de pedidos\"} />}\r\n                </div>\r\n            </div>\r\n            {\r\n                !loading && (\r\n                    <>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card shadow\">\r\n                                    <div className=\"card-header\">\r\n                                        <h5 className=\"card-title\">Pedido</h5>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">\r\n                                            <strong>Nro Pedido: </strong>{pedido.pedido_nro}\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            <strong>Estado: </strong>{pedido.pedido_est === \"pagado\" ?\r\n                                                <span className=\"badge badge-success\">Pagado</span> :\r\n                                                <span className=\"badge badge-danger\">Anulado</span>}\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            <strong>Fecha: </strong>{pedido.pedido_fech}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card shadow\">\r\n                                    <div className=\"card-header\">\r\n                                        <h5 className=\"card-title\">Mesa</h5>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">\r\n                                            <strong>Nro mesa: </strong>{pedido.Mesa.mesa_nro}\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            <strong>Capacidad: </strong>{pedido.Mesa.mesa_cap}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card shadow\">\r\n                                    <div className=\"card-header\">\r\n                                        <h5 className=\"card-title\">Trabajador</h5>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">\r\n                                            <strong>Trabajador: </strong>{pedido.Usuario.usu_nom}\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            <strong>Apellido: </strong>{pedido.Usuario.usu_ape}\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            <strong>Tipo: </strong>{pedido.Usuario.usu_tipo}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-4\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card shadow\">\r\n                                    <div className=\"card-header\">\r\n                                        <h4 className=\"card-title\">Detalle del pedido</h4>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <table className=\"table table-hover table-striped table-bordered text-center\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>#</th>\r\n                                                    <th>Cantidad</th>\r\n                                                    <th>Descripción</th>\r\n                                                    <th>Imagen</th>\r\n                                                    <th>P. unitario</th>\r\n                                                    <th>P. total</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    pedido.PedidoPlatos.map((objPedido, i) => {\r\n                                                        return (\r\n                                                            <tr key={objPedido.pedidoplato_id}>\r\n                                                                <td>{i + 1}</td>\r\n                                                                <td>{objPedido.pedidoplato_cant}</td>\r\n                                                                <td>{objPedido.Plato.plato_nom}</td>\r\n                                                                <td>\r\n                                                                    <img src={objPedido.Plato.plato_img}\r\n                                                                        style={{\r\n                                                                            height: \"100px\",\r\n                                                                        }}\r\n                                                                        alt={\"Imagen del plato\"}\r\n                                                                    />\r\n                                                                </td>\r\n                                                                <td>S/ {objPedido.Plato.plato_pre}</td>\r\n                                                                <td>S/ {\r\n                                                                    (+objPedido.pedidoplato_cant * +objPedido.Plato.plato_pre).toFixed(2)\r\n                                                                }</td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-4 justify-content-end\">\r\n                            <div className=\"col-md-2\">\r\n                                <button className=\"btn btn-block btn-dark\" onClick={()=>{\r\n                                    history.goBack();\r\n                                }}>\r\n                                   <i className=\"fas fa-chevron-left    \"></i>  Atrás\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminPedidosDetalle\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport AdminDashboard from \"../modules/admin/screens/AdminDashboard\";\r\nimport AdminCategorias from \"../modules/admin/screens/AdminCategorias\";\r\nimport AdminMesas from \"../modules/admin/screens/AdminMesas\";\r\nimport AdminPedidos from \"../modules/admin/screens/AdminPedidos\";\r\nimport AdminPlatos from \"../modules/admin/screens/AdminPlatos\";\r\nimport AdminHeader from \"../modules/admin/components/AdminHeader\";\r\nimport AdminPedidosDetalle from \"../modules/admin/screens/AdminPedidosDetalle\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nconst RouterAdmin = () => {\r\n    return (\r\n        <>\r\n            <AdminHeader />\r\n            <main className=\"container\">\r\n                <Switch>\r\n                    <Route path={\"/admin/dashboard\"} component={AdminDashboard} />\r\n                    <Route path={\"/admin/categorias\"} component={AdminCategorias} />\r\n                    <Route path={\"/admin/mesas\"} component={AdminMesas} />\r\n                    <Route path={\"/admin/pedidos/:pedido_id\"} component={AdminPedidosDetalle} />\r\n                    <Route path={\"/admin/pedidos\"} component={AdminPedidos} />\r\n                    <Route path={\"/admin/platos\"} component={AdminPlatos} />\r\n                    <Redirect to={\"/admin/dashboard\"} />\r\n                </Switch>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RouterAdmin;\r\n","import React from 'react'\r\n\r\nconst GuestLanding = () => {\r\n    return (\r\n        <div>\r\n            Pag Guest Landing\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GuestLanding\r\n","import React from 'react'\r\n\r\nconst GuestNosotros = () => {\r\n    return (\r\n        <div>\r\n            Pagina de Nosotros\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GuestNosotros\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport GuestLanding from \"../modules/guest/screens/GuestLanding\";\r\nimport GuestNosotros from \"../modules/guest/screens/GuestNosotros\";\r\n\r\nconst RouterGuest = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path={\"/nosotros\"} component={GuestNosotros} />\r\n      <Route path={\"/\"} component={GuestLanding} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default RouterGuest;\r\n","import { createContext } from 'react';\r\n\r\nconst PosContext = createContext();\r\n\r\nexport default PosContext;","import React, { useContext } from \"react\";\r\nimport PosContext from \"../../../context/pos/posContext\";\r\n\r\nconst PosMesaItem = ({ objMesa }) => {\r\n  const localPosContext = useContext(PosContext);\r\n  const { globalObjMesa, seleccionarMesa } = localPosContext;\r\n  return (\r\n    <li\r\n      className={`mesas__mesa ${globalObjMesa?.mesa_id === objMesa.mesa_id && \"activo\"}`}\r\n      onClick={() => {\r\n        seleccionarMesa(objMesa);\r\n      }}\r\n    >\r\n      <span className=\"mesas__titulo\">Mesa</span>\r\n      <span className=\"mesas__numero\">{objMesa.mesa_nro}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PosMesaItem;\r\n","import React from 'react'\r\n\r\nconst PosCargando = () => {\r\n    return (\r\n        <div className=\"spinner-border text-light\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PosCargando\r\n","import { URL_BACKEND, URL_BACKEND_HEROKU } from \"../enviroment/enviroment\";\r\n\r\nexport const getMesas = async () => {\r\n  const response = await fetch(`${URL_BACKEND_HEROKU}/mesa`);\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const deleteMesaById = async (mesa_id) => {\r\n  const response = await fetch(`${URL_BACKEND}/mesas/${mesa_id}`, {\r\n    method: \"DELETE\",\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const postMesa = async (objMesa) => {\r\n  const response = await fetch(`${URL_BACKEND}/mesas`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(objMesa),\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const putMesaById = async (objMesa) => {\r\n  const response = await fetch(`${URL_BACKEND}/mesas/${objMesa.mesa_id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(objMesa),\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PosMesaItem from \"./PosMesaItem\";\r\nimport PosCargando from \"./PosCargando\";\r\nimport { getMesas } from \"../../../services/mesas\";\r\nimport io from \"socket.io-client\";\r\nimport { URL_BACKEND_HEROKU } from \"../../../enviroment/enviroment\";\r\n\r\nconst PosMesas = () => {\r\n  const [mesas, setMesas] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Cuando el socket se instancia, automáticamente es conectado al backend\r\n    const socket = io(URL_BACKEND_HEROKU);\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"CONECTADO! =)\");\r\n    });\r\n    socket.on(\"mesas-lista\", (mesasString) => {\r\n      const mesasJSON = JSON.parse(mesasString);\r\n      setMesas(mesasJSON);\r\n    });\r\n    socket.on(\"disconnect\", () => {\r\n      console.log(\"DESCONECTADO =(\");\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getMesas().then((rpta) => {\r\n      if (rpta.ok) {\r\n        setMesas(rpta.content);\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mesas\">\r\n      <ul className=\"mesas__lista\">\r\n        {loading && <PosCargando />}\r\n        {!loading &&\r\n          mesas.map((objMesa) => {\r\n            return <PosMesaItem objMesa={objMesa} key={objMesa.mesa_id} />;\r\n          })}\r\n      </ul>\r\n      <div className=\"mesas__info\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosMesas;\r\n","import { useState, useEffect } from \"react\";\r\nimport { URL_BACKEND_HEROKU } from \"../enviroment/enviroment\";\r\n\r\nexport const useFetch = (url) => {\r\n    const [estado, setEstado] = useState({ result: null, loading: true });\r\n\r\n    useEffect(() => {\r\n        const hacerFetch = async () => {\r\n            let rpta = await fetch(`${URL_BACKEND_HEROKU}${url}`);\r\n            let json = await rpta.json();\r\n\r\n            setEstado({\r\n                result: json,\r\n                loading: false,\r\n            });\r\n\r\n        };\r\n        hacerFetch();\r\n    }, []);\r\n\r\n    return estado;\r\n}","import React, { useContext } from \"react\";\r\nimport { useFetch } from \"../../../hooks/useFetch\";\r\nimport PosCargando from \"./PosCargando\";\r\nimport PosContext from \"../../../context/pos/posContext\";\r\n\r\nconst PosCategorias = () => {\r\n    const { result, loading } = useFetch(\"/categoria\");\r\n    const localPosContext = useContext(PosContext);\r\n    const { seleccionarCategoria, globalObjCategoria } = localPosContext;\r\n\r\n\r\n    return (\r\n        <div className=\"carta__categorias\">\r\n            {loading && <PosCargando />}\r\n            {!loading &&\r\n                result.content.map((objCategoria) => {\r\n\r\n                    const activo = globalObjCategoria?.categoria_id === objCategoria.categoria_id ? \"activo\" : \"\";\r\n\r\n                    return (\r\n                        <button\r\n                            className={`boton boton-outline-primary ${activo}`}\r\n                            key={objCategoria.categoria_id}\r\n                            onClick={() => {\r\n                                seleccionarCategoria(objCategoria);\r\n                            }}\r\n                        >\r\n                            {objCategoria.categoria_nom}\r\n                        </button>\r\n                    );\r\n                })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PosCategorias;\r\n","import React, { useContext } from 'react'\r\nimport PosContext from '../../../context/pos/posContext'\r\n\r\nconst PosPlatoItem = ({ objPlato }) => {\r\n    const localPosContext = useContext(PosContext);\r\n    const { incrementarPlato } = localPosContext;\r\n\r\n    return (\r\n        <div className=\"carta__plato\">\r\n            <img\r\n                src={objPlato.plato_img}\r\n                alt=\"\"\r\n            />\r\n            <h4 className=\"carta__titulo\">{objPlato.plato_nom}</h4>\r\n            <span className=\"carta__precio\">S/ {objPlato.plato_pre}</span>\r\n            <div className=\"carta__botones\">\r\n                <button className=\"boton boton-outline-primary boton-restar\">\r\n                    -1\r\n                  </button>\r\n                <button className=\"boton boton-outline-primary boton-sumar\" onClick={() => {\r\n                    incrementarPlato(objPlato.plato_id);\r\n                }}>\r\n                    +1\r\n                  </button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PosPlatoItem\r\n","import { URL_BACKEND_HEROKU } from \"../enviroment/enviroment\";\r\n\r\n/**\r\n * Funcion que obtiene los platos de una categoria dado el ID de una categoria\r\n * @param {*} categoriaId \r\n */\r\nexport const getPlatosByCategoriaId = async (categoria_Id) => {\r\n    const response = await fetch(\r\n        `${URL_BACKEND_HEROKU}/categoria/${categoria_Id}/platos`);\r\n    const json = await response.json();\r\n    return json;\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport PosPlatoItem from './PosPlatoItem'\r\nimport PosContext from '../../../context/pos/posContext';\r\nimport { getPlatosByCategoriaId } from '../../../services/categoria';\r\n\r\nconst PosPlatos = () => {\r\n\r\n    const [platos, setPlatos] = useState([]);\r\n\r\n    const localPosContext = useContext(PosContext);\r\n    const { globalObjCategoria } = localPosContext;\r\n\r\n    useEffect(() => {\r\n        if (globalObjCategoria) {\r\n            getPlatosByCategoriaId(globalObjCategoria.categoria_id).then((rpta) => {\r\n                console.log(rpta);\r\n                if (rpta.ok) {\r\n                    setPlatos(rpta.content.Platos);\r\n                }\r\n            });\r\n        }\r\n    }, [globalObjCategoria]);\r\n\r\n    return (\r\n        <div className=\"carta__platos\">\r\n            {\r\n                platos.map((objPlato) => {\r\n                    return <PosPlatoItem objPlato={objPlato} key={objPlato.plato_id} />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PosPlatos\r\n","import React from \"react\";\r\nimport { useFetch } from \"../../../hooks/useFetch\";\r\nimport PosCargando from \"./PosCargando\";\r\n\r\nconst PosComandaListaItem = ({ pedidoItem }) => {\r\n  const { loading, result } = useFetch(`/plato/${pedidoItem.plato_id}`);\r\n\r\n  // TODO: useCallback, useMemo\r\n\r\n  return (\r\n\r\n    loading ? <PosCargando /> :\r\n\r\n      <li className=\"comanda__item\">\r\n        <p className=\"comanda__nombre\">\r\n          <span>\r\n            <strong>{result.content.plato_nom}</strong>\r\n          </span>\r\n          <span>Precio: S/ {result.content.plato_pre}</span>\r\n        </p>\r\n        <p className=\"comanda__cantidad\">{pedidoItem.pedidoplato_cant}</p>\r\n        <p className=\"comanda__precio\">\r\n          <strong>S/ {(+result.content.plato_pre * +pedidoItem.pedidoplato_cant).toFixed(2)}</strong>\r\n        </p>\r\n      </li>\r\n  );\r\n};\r\n\r\nexport default PosComandaListaItem;\r\n","import React, { useContext } from \"react\";\r\nimport PosComandaListaItem from \"./PosComandaListaItem\";\r\nimport PosContext from \"../../../context/pos/posContext\";\r\n\r\n\r\nconst PosComandaLista = () => {\r\n\r\n    const localPosContext = useContext(PosContext);\r\n    const { globalPedidos, globalObjMesa } = localPosContext;\r\n\r\n    const pedidoActual = globalPedidos.find((objPedido) => objPedido.mesa_id === globalObjMesa.mesa_id);\r\n    // console.log(pedidoActual);\r\n\r\n    return (\r\n        <ul className=\"comanda__lista\">\r\n            {\r\n                !pedidoActual ? <strong>No hay pedidos en esta mesa</strong> :\r\n                pedidoActual.pedidoplatos.map((pedidoItem,i) => {\r\n                    return <PosComandaListaItem key={i} pedidoItem={pedidoItem} />;\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default PosComandaLista;\r\n","import React, { useContext } from \"react\";\r\nimport PosMesas from \"../components/PosMesas\";\r\nimport PosCategorias from \"../components/PosCategorias\";\r\nimport PosPlatos from \"../components/PosPlatos\";\r\nimport PosComandaLista from \"../components/PosComandaLista\";\r\nimport PosContext from \"../../../context/pos/posContext\";\r\n\r\nconst Pos = () => {\r\n  const localPosContext = useContext(PosContext);\r\n  const { globalObjMesa, globalPagar } = localPosContext;\r\n\r\n  return (\r\n    <section className=\"tabla\">\r\n      <PosMesas />\r\n      <div className=\"pedido\">\r\n        <div className=\"carta\">\r\n          <PosCategorias />\r\n          <PosPlatos />\r\n        </div>\r\n        <div className=\"boleta\">\r\n          <h3>Pedido</h3>\r\n          <div className=\"comanda\">\r\n            {globalObjMesa ? (\r\n              <>\r\n                <h4 className=\"comanda__mesa\">Mesa {globalObjMesa.mesa_nro}</h4>\r\n                <p className=\"comanda__usuario\">Carlos Jimenez</p>\r\n                <hr />\r\n                <PosComandaLista />\r\n                <button className=\"boton boton-success boton-block\"\r\n                  onClick={() => {\r\n                    globalPagar();\r\n                  }} >\r\n                  PAGAR\r\n                </button>\r\n              </>\r\n            ) : (\r\n                <strong>No hay ninguna mesa seleccionada 😪</strong>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Pos;\r\n","import React, { useContext } from 'react'\r\nimport AuthContext from '../../../context/auth/authContext'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nconst PosHeader = ({ history }) => {\r\n\r\n    const localAuthContext = useContext(AuthContext);\r\n    const { usu_nom, cerrarSesion } = localAuthContext;\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__logo\">\r\n                <img src=\"/assets/img/logo.svg\" alt=\"\" />\r\n            </div>\r\n            <div className=\"header__buscador\">\r\n                <img src=\"/assets/img/search.svg\" alt=\"\" />\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"header__input\"\r\n                    placeholder=\"Busca un término\"\r\n                />\r\n            </div>\r\n            <div className=\"header__usuario\">\r\n                <img src=\"https://randomuser.me/api/portraits/men/90.jpg\" alt=\"\" />\r\n                <span>{usu_nom}</span>\r\n                <button\r\n                    className=\"boton boton-success\"\r\n                    onClick={() => {\r\n                        cerrarSesion();\r\n                        history.replace(\"/\");\r\n                    }}\r\n                >Cerrar sesión</button>\r\n            </div>\r\n        </header>\r\n\r\n    )\r\n}\r\n// cuenado envolvemos un componente en la funcion withRouse,\r\n// este componente recibe en sus props, todos los paramteros\r\n// del enrutador asi como history, location, matchParams, etc\r\nexport default withRouter(PosHeader);\r\n","import React from 'react'\r\n\r\n// import React, { useContext } from 'react'\r\n// import PosContext from '../../../context/pos/posContext'\r\n\r\nconst PosNavigation = () => {\r\n\r\n    // const localPosContext = useContext(PosContext);\r\n    // console.log(localPosContext);\r\n    \r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__lista\">\r\n                <li>\r\n                    <img src=\"/assets/img/plato_blanco.svg\" alt=\"\" />\r\n                    <span>Bebidas</span>\r\n                </li>\r\n                <li>\r\n                    <img src=\"/assets/img/plato_blanco.svg\" alt=\"\" />\r\n                    <span>Bebidas</span>\r\n                </li>\r\n                <li>\r\n                    <img src=\"/assets/img/plato_blanco.svg\" alt=\"\" />\r\n                    <span>Bebidas</span>\r\n                </li>\r\n                <li>\r\n                    <img src=\"/assets/img/plato_blanco.svg\" alt=\"\" />\r\n                    <span>Bebidas</span>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default PosNavigation\r\n","const PosReducer = (stateActual, action) => {\r\n  switch (action.type) {\r\n    case \"SELECCIONAR_MESA\":\r\n      return {\r\n        ...stateActual,\r\n        globalObjMesa: action.data,\r\n      };\r\n      break;\r\n    case \"SELECCIONAR_CATEGORIA\":\r\n      return {\r\n        ...stateActual,\r\n        globalObjCategoria: action.data,\r\n      };\r\n    case \"ACTUALIZAR_GLOBAL_PEDIDOS\":\r\n      return {\r\n        ...stateActual,\r\n        globalPedidos: action.data,\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default PosReducer;\r\n","import React, { useReducer } from \"react\";\r\nimport PosReducer from \"./posReducer\";\r\nimport PosContext from \"./posContext\";\r\nimport { posPedido } from \"../../services/pedidos\";\r\nimport moment from \"moment\";\r\n\r\nconst PosState = (props) => {\r\n  const [state, dispatch] = useReducer(PosReducer, {\r\n    globalObjMesa: null,\r\n    globalObjCategoria: null,\r\n    \r\n    globalPedidos: [\r\n      {\r\n        mesa_id: 1,\r\n        pedido_nro: \"800\",\r\n        pedido_est: \"pagado\",\r\n        pedidoplatos: [\r\n          {\r\n            plato_id: 1,\r\n            pedidoplato_cant: 5,\r\n          },\r\n\r\n        ],\r\n      },\r\n      {\r\n        mesa_id: 2,\r\n        pedido_nro: \"900\",\r\n        pedido_est: \"pagado\",\r\n        pedidoplatos: [\r\n          {\r\n            plato_id: 1,\r\n            pedidoplato_cant: 2,\r\n          },\r\n          {\r\n            plato_id: 2,\r\n            pedidoplato_cant: 3,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  });\r\n\r\n  /**\r\n   * A continuación, la lista de funciones que intentarán modificar el estado\r\n   */\r\n\r\n  const seleccionarMesa = (objMesa) => {\r\n    dispatch({\r\n      type: \"SELECCIONAR_MESA\",\r\n      data: { ...objMesa },\r\n    });\r\n  };\r\n\r\n  const seleccionarCategoria = (objCategoria) => {\r\n    dispatch({\r\n      type: \"SELECCIONAR_CATEGORIA\",\r\n      data: { ...objCategoria },\r\n    });\r\n  };\r\n\r\n  const incrementarPlato = (plato_id) => {\r\n    const { globalObjMesa, globalPedidos } = state;\r\n    // preguntamos si no tenemos una mesa global seleccionada\r\n    if (!globalObjMesa) return;\r\n    // buscar el pedido de la mesa seleccionada, es posible que la mesa\r\n    // seleccionada no tenga pedidos aún, como es posible que tenga pedidos\r\n    const pedidoActual = globalPedidos.find(\r\n      (objPedido) => objPedido.mesa_id === globalObjMesa.mesa_id\r\n    );\r\n    // si la mesa actual seleccionada tiene un pedido activo\r\n    if (pedidoActual) {\r\n      let pedidoPlato = pedidoActual.pedidoplatos.find(\r\n        (objPedidoPlato) => objPedidoPlato.plato_id === plato_id\r\n      );\r\n      //la mesa sí tenía un pedido.\r\n      // pero.... ¿Tenía el pedido un plato con el plato_id que queremos incrementar?\r\n      if (pedidoPlato) {\r\n        // sí tenía un plato\r\n        const globalPedidosNuevo = [\r\n          ...globalPedidos.map((objPedido) => {\r\n            if (objPedido.mesa_id === globalObjMesa.mesa_id) {\r\n              objPedido.pedidoplatos.forEach((objPlato) => {\r\n                if (objPlato.plato_id === plato_id) {\r\n                  objPlato.pedidoplato_cant += 1;\r\n                }\r\n              });\r\n              return objPedido;\r\n            }\r\n            // DE TODAS FORMAS, MAP tiene que retornar un objeto\r\n            return objPedido;\r\n          }),\r\n        ];\r\n        dispatch({\r\n          type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n          data: globalPedidosNuevo,\r\n        });\r\n      } else {\r\n        // La mesa, si tenía un pedido pero no tenía el plato el cual estamos incrementando\r\n        // ES DECIR había otros platos en la orden\r\n        const globalPedidosNuevo = [\r\n          ...globalPedidos.map((objPedido) => {\r\n            if (objPedido.mesa_id === globalObjMesa.mesa_id) {\r\n              objPedido.pedidoplatos.push({\r\n                plato_id: plato_id,\r\n                pedidoplato_cant: 1,\r\n              });\r\n              return objPedido;\r\n            }\r\n            return objPedido;\r\n          })\r\n        ];\r\n        dispatch({\r\n          type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n          data: globalPedidosNuevo,\r\n        });\r\n      }\r\n\r\n    } else {\r\n      // si la mesa actual seleccionada no tuviera ningun pedido\r\n      const globalPedidosNuevo = [...globalPedidos,\r\n      {\r\n        mesa_id: globalObjMesa.mesa_id,\r\n        pedido_nro: \"903\",\r\n        pedido_est: \"pendiente\",\r\n        pedidoplatos: [\r\n          {\r\n            plato_id: plato_id,\r\n            pedidoplato_cant: 1,\r\n          },\r\n        ],\r\n      }\r\n      ];\r\n      dispatch({\r\n        type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n        data: globalPedidosNuevo,\r\n      });\r\n\r\n\r\n    }\r\n  };\r\n\r\n  const globalPagar = () => {\r\n    const { globalPedidos, globalObjMesa } = state;\r\n    let pedidoActual = globalPedidos.find((objPedido) => (objPedido.mesa_id === globalObjMesa.mesa_id));\r\n    pedidoActual.pedido_fech = \"2020-09-02 20:00:00\";\r\n    pedidoActual.usu_id = 1;\r\n\r\n    \r\n\r\n    posPedido(pedidoActual).then((rpta)=>{\r\n      console.log(rpta);\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <PosContext.Provider\r\n      value={{\r\n        globalObjMesa: state.globalObjMesa,\r\n        globalObjCategoria: state.globalObjCategoria,\r\n        globalPedidos: state.globalPedidos,\r\n        seleccionarCategoria: seleccionarCategoria,\r\n        seleccionarMesa: seleccionarMesa,\r\n        incrementarPlato: incrementarPlato,\r\n        globalPagar: globalPagar,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PosContext.Provider>\r\n  );\r\n};\r\nexport default PosState;\r\n","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Pos from '../modules/pos/screens/Pos';\r\nimport \"../modules/pos/styles/pos.css\";\r\nimport PosHeader from '../modules/pos/components/PosHeader';\r\nimport PosNavigation from '../modules/pos/components/PosNavigation';\r\nimport PosState from '../context/pos/posState';\r\n\r\nconst RouterPos = () => {\r\n    return (\r\n        <PosState>\r\n            <PosHeader />\r\n            <main className=\"pos-container\">\r\n                <PosNavigation />\r\n                <Switch>\r\n                    <Route path={\"/pos\"} component={Pos} />\r\n                </Switch>\r\n\r\n            </main>\r\n        </PosState>\r\n    )\r\n}\r\n\r\nexport default RouterPos\r\n","import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport AuthContext from '../context/auth/authContext';\r\n\r\nconst RutaPrivada = ({ path, componente: Componente }) => {\r\n\r\n    const localAuthContext = useContext(AuthContext);\r\n    const { autenticado, cargando } = localAuthContext;\r\n\r\n    if (cargando) {\r\n        return <h5>Cargando...</h5>\r\n    } else {\r\n        return autenticado ? (\r\n            <Route path={path} component={Componente} />\r\n        ) : (\r\n                <Redirect to={\"/\"} />\r\n            );\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default RutaPrivada;\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport RouterAuth from \"./RouterAuth\";\r\nimport RouterAdmin from \"./RouterAdmin\";\r\nimport RouterGuest from \"./RouterGuest\";\r\nimport RouterPos from './RouterPos';\r\nimport RutaPrivada from './RutaPrivada';\r\n\r\n\r\nconst RouterMain = () => {\r\n\r\n\r\n\r\n    return (\r\n        <HashRouter basename=\"/\">\r\n\r\n            {/* Contenido estatico */}\r\n\r\n            <Switch>\r\n                <Route path={\"/auth\"} component={RouterAuth} />\r\n                <RutaPrivada path={\"/admin\"} componente={RouterAdmin} />\r\n                <RutaPrivada path={\"/pos\"} componente={RouterPos} />\r\n                {/* <Route path={\"/admin\"} component={RouterAdmin} /> */}\r\n                {/* <Route path={\"/pos\"} component={RouterPos} /> */}\r\n\r\n                <Route path={\"/\"} component={RouterGuest} />\r\n\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default RouterMain;\r\n","const AuthReducer = (stateActual, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"INICIAR_SESION\":\r\n            return {\r\n                autenticado: true,\r\n                usu_nom: action.data.usu_nom,\r\n                usu_id: action.data.usu_id,\r\n                token: action.data.token,\r\n                cargando: false,\r\n            }\r\n        case \"CERRAR_SESION\":\r\n            localStorage.removeItem(\"token\");\r\n            return {\r\n                autenticado: false,\r\n                usu_nom: null,\r\n                usu_id: null,\r\n                token: null,\r\n                cargando: false,\r\n\r\n            }\r\n        default:\r\n            return { ...stateActual };\r\n    }\r\n};\r\n\r\nexport default AuthReducer;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport AuthReducer from \"./authReducer\";\r\nimport AuthContext from \"./authContext\";\r\nimport { postVerificar } from \"../../services/auth\";\r\n\r\nconst AuthState = (props) => {\r\n    const [state, dispatch] = useReducer(AuthReducer, {\r\n        autenticado: false,\r\n        usu_nom: null,\r\n        usu_id: null,\r\n        token: null,\r\n        cargando: true,\r\n    });\r\n\r\n    useEffect(()=>{\r\n        iniciarSesionConLocalStorage();\r\n    },[]);\r\n\r\n    const iniciarSesionConLocalStorage = () => {\r\n        if(!localStorage.getItem(\"token\")) return;\r\n\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        const payloadEnc = token.split(\".\")[1];\r\n        const payloadDes = window.atob(payloadEnc)\r\n        const payloadJSON = JSON.parse(payloadDes);\r\n\r\n        postVerificar(token).then((rpta)=>{\r\n            rpta ? dispatch({\r\n                type:\"INICIAR_SESION\",\r\n                data: {\r\n                    ...payloadJSON, \r\n                    token\r\n                },\r\n            }) : dispatch({\r\n                type:\"CERRAR_SESION\",\r\n            });\r\n        });\r\n\r\n    };\r\n\r\n    const iniciarSesion = (token) => {\r\n\r\n        const payloadEnc = token.split(\".\")[1];\r\n        /**\r\n         * window.atob(\"algoencriptadoenBASE64\") retorna el contenido desencriptado\r\n         * window.btoa(\"algoquequeremosencriptar\") retorna el contedido encriptado\r\n         */\r\n        const payloadDes = window.atob(payloadEnc)\r\n        const payloadJSON = JSON.parse(payloadDes);\r\n        \r\n        localStorage.setItem(\"token\",token);\r\n\r\n        dispatch({\r\n            type: \"INICIAR_SESION\",\r\n            data: { \r\n                ...payloadJSON, \r\n                token:token, \r\n            },\r\n\r\n        });\r\n\r\n    }\r\n\r\n    const cerrarSesion = () =>{\r\n        dispatch({\r\n            type: \"CERRAR_SESION\",\r\n        });\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                autenticado: state.autenticado,\r\n                usu_nom: state.usu_nom,\r\n                usu_id: state.usu_id,\r\n                cargando: state.cargando,\r\n                iniciarSesion: iniciarSesion,\r\n                cerrarSesion,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\nexport default AuthState;\r\n","import React from 'react'\nimport RouterMain from './routers/RouterMain'\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport AuthState from './context/auth/authState';\n\nconst App = () => {\n  return (\n    <AuthState>\n      <RouterMain />\n    </AuthState>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}